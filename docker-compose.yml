version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/ai-pipeline/.env:/var/jenkins_home/.env
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD}
    networks:
      - ai-pipeline
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-remediator:
    build:
      context: .
      dockerfile: Dockerfile.ai-remediator
    container_name: ai-remediator
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - /opt/ai-pipeline:/app
      - /opt/ai-pipeline/.env:/app/.env
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - ai-pipeline
    depends_on:
      - jenkins
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - ai-pipeline
    depends_on:
      - jenkins
      - ai-remediator

networks:
  ai-pipeline:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  jenkins-data:
    driver: local
    driver_opts:
      type: none
      device: /var/jenkins_home
      o: bind 